type: ABOUT_IT
title: Süratli Kodçu Olmanın Püf Noktaları
slug: suratli-kodcu-olmanin-puf-noktalari
date: 2019-10-04T18:22:00.000Z
content: >-
  Yazının başlığını atarken, kodçu yerine yazılımcı ve programcı isimlerini
  kullanmayı düşündüm fakat bunlar daha genel ve benim bahsetmek istediğim
  konunun direk kod yazanları ilgilendirdiği için, kodçu demeye daha uygun
  gördüm.


  <!-- more -->


  Bu yazıda daha hızlı terminal kullanımı ve daha hızlı kod yazmak hakkında
  özellikle çoğu kişinin öğrenme ihtiyacı duymadığı için farkında olmadığı
  bilgiler vermeyi düşünüyorum. Daha hızlı terminal nasıl kullanabiliriz, proje
  klasörlerine daha hızlı nasıl ulaşırız, kafamızı karıştıran projeleri nasıl
  kategorilendirebiliriz bunlardan da bahsedeceğim. Ayrıca burada bahsedeceğim,
  bazı tavsiyelere alışmanıza biraz zaman alabileceği gibi bazılarını da hemen
  uygulamaya başlayabilirsiniz.


  ## 10 Parmak Klavye Kullanmak


  Eğer tuşlarken klavyeye bakıyorsanız, bu gerçek anlamda bir yavaşlıktır, 10
  parmak kullanarak tuşlamayı bilmeyen çoğu insan özellikle 5-6 parmağını
  kullanarak tuşlar bu da genelde dakika da 80 kelimenin altındadır. Sadece 10
  parmak tuşlamayı öğrenerek dakikada 80 kelimeden fazla yazabilirsiniz ben 10
  parmak kullanarak dakikada 95 kelime civarı tuşluyorum.


  ## İngilizce Klavye Kullanmak


  İster F klavye olsun ister Q klavye olsun, Türkçe şablona göre ayarlanmış bir
  klavye kullanıyorsanız, kodlama da sıkça kullandığımız noktalama işaretleri
  genelde klavyenin üst kısmında shift kombinasyonuyla erişilen alanlardadır. 10
  Parmak bilenler için üst kısımları kullanmak biraz daha zordur, bilmeyenler
  için ise noktalama işareti olan tuşların yerini hatırlamak daha zordur.
  Sürekli klavyeye bakmanız gerekir. İngilizce özellikle Amerika Birleşik
  Devletler "US" şablonlu bir klavye tercih ederseniz `, < . > / ? \ | ' " ; : ]
  } [ {` işaretlerini direk elinizin altında bulabilirsiniz. Geriye kalan sadece
  normal parantezlerdir onlarda üst kısımda mevcuttur. Türkçe şablonlu klavyeye
  göre gerçekten daha pratiktir, sonuçta kullandığımız yazılım dillerini onlar
  geliştiriyor, dolayısıyla kullandıkları klavye şablonuna da daha uygun
  işaretler seçiyorlar.


  ## Terminal Kısayollarını Öğrenmek


  Terminal komutlarını çoğumuz biliriz, özellikle klasörler arasında gezmek ana
  dizine ve kullanıcı dizinine girmeyi biliyoruzdur, ancak bunların daha fazlası
  da var ve gerçekten çok pratik.


  Bildiğimiz klasik komutlar şunlardır :


  ```

  cd    : klasöre giriş

  /     : Kök dizini

  `     : Kullanıcı dizini

  pwd   : Bulunduğunuz klasör yolu

  .     : Bulunduğunuz dizin

  ..    : Bulunduğunuz dizinin bir üst diziniclear : Terminaldeki çıktıları
  siler.

  ```


  Benim bildiklerim bunlardı ve bu komutları kullanarak hoyratça klasörler
  arasında dolaşıyordum, bir gün uzunca derin bir klasöre girdikten sonra tekrar
  eski bulunduğum klasöre dönmem gerekti, bunun sonucunda dedim ki,


  > Ulan bu linux cular akıllı adamlar baksana ls komutu bile list anlamında,
  hiç bir şey boşa değil, bunlar kesin bununda kısa bir yolunu yapmıştır, şunu
  internette bir arayım.


  O günden sonra, gerçekten ne kadar doğru düşündüğümü farkettim ve bir önceki
  bulunduğum dizine dönmenin `-` bildiğimiz tire işaretiyle olduğunu fark
  ettim.  Bu da savımı kanıtlar nitelikteydi.


  Gel gelelim devamında terminalde uzunca bir kod yazdıktan sonra kodun başına
  dönmem gerekiyordu, bende tabi ki sol tuşa basılı tutarak sola doğru gidiyor
  düzeltiyor devam ediyordum, daha sonra bununda kesinlikle bir kısa yolu
  olacağını fark ederek, aşağıdaki kısayollara ulaştım.


  ```
    Ctrl + a : İmleci satır başına getirir.
    Ctrl + e : İmleci satır sonuna getirir.
    Ctrl + d : İmlecin sağındaki karakteri siler.
    Alt  + d : İmlecin sağ tarafındaki ilk kelimeyi siler.
    Ctrl + u : İmlecin sol tarafını tamamen siler.
    Ctrl + l : Terminaldeki tüm çıktıları siler.
    Ctrl + r : Komut geçmişinde arama yapar.
    Alt  + b : İmleci bir önceki kelimenin baş harfine getirir.
  ```

    Şimdi bu kısayollar gerçekten işinizi çok kolaylaştırır özellikle terminalde dizin yolu yazarken yanlış yazabiliyoruz, yukarıdaki kısayollar ile ok tuşlarını kullanmamıza pek gerek kalmıyor.

  ## Terminalde Alias Tanımlamak


  Sürekli yazdığımız uzun uzun komutlar varsa bu komutlara alias tanımlayarak 
  kısaltabiliriz, biz tanımladığımız aliasları terminale yazdığımızda arka
  tarafta  asıl uzun komut çalışır.


  ## Kod Editöründe Snippet Tanımlamak


  Son zamanlardaki yeni kod editörleri hali hazırda bir çok snippeti
  barındırarak geliyor artık eskisi gibi uzun uzun fonksiyon tanımlamak yerine
  func yazıp seçerek boş bir fonksiyonu ekrana getirebiliyoruz. Bu tanımlamalar
  editörden editöre değişeceği için kullandığınız editöre göre internette arama
  yapabilirsiniz.


  ## Kısayollar Eklemek


  Windows kullanıcıları için kısayol kısayoldur. Ancak linux kullanıcıları için,
  bir dizin veya dosya kısayolu link köprü olarak geçer, ben bunun yanında
  kısayol olarak programları başlatmasını sağlayan .desktop dosyalarına da
  değinmek istiyorum. Örneğin ben dizine girip klasörü editörde açmak yerine
  .desktop dosyasına editörde açılacak dosya dizinini bağlıyorum ve menüden
  direk projemi açıyorum.

  Örnek bir .desktop dosyası


  ```

  [Desktop Entry]

  Type=Application

  Version=1.0

  Name=website

  Path=/home/arch/davutkara.com

  Exec=code .

  Icon=jmemorize

  Terminal=false

  Categories=Development

  ```


  Yukarıdaki örnek dosyada Path dizini içerisinde Exec komutunu çalıştırıyor. Bu
  sayede Visual Studio Code editöründe direk olarak projemi açıyorum. Sizde
  menüye bu tarz eklemeler yapabilirsiniz.


  Şimdilik tavsiyelerim bu kadar, eğer sizinde eklemek veya düzeltmek
  istedikleriniz varsa bu yazıya github üzerinden katkıda bulunabilirsiniz, esen
  kalın.
